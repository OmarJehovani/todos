# Patch generated by Pyment v0.3.3

--- a/todos.py
+++ b/todos.py
@@ -16,7 +16,13 @@
 @app.command("create")
 def create(name: str = typer.Option("Unnamed", "-ln", "--listname")):
 
-    """Create a new todo list"""
+    """Create a new todo list
+
+    :param name: str:  (Default value = typer.Option("Unnamed")
+    :param "-ln": 
+    :param "--listname"): 
+
+    """
 
     if check_list_exists(name):
         print("There is already a todo list with this name.")
@@ -38,7 +44,13 @@
 
 @app.command("show")
 def show_list(list_name: str = typer.Option(..., "-ln", "--listname")):
-    """Shows Task in one list"""
+    """Shows Task in one list
+
+    :param list_name: str:  (Default value = typer.Option(...)
+    :param "-ln": 
+    :param "--listname"): 
+
+    """
     if not check_list_exists(list_name):
         print("The list does not exist. Use create list first.")
         return
@@ -53,7 +65,22 @@
     summary: str = typer.Option(None, "-d", "--description"),
     owner: str = typer.Option(..., "-o", "--owner"),
 ):
-    """Add a task to a given todo list"""
+    """Add a task to a given todo list
+
+    :param list_name: str:  (Default value = typer.Option(...)
+    :param "-ln": 
+    :param "--listname"): 
+    :param task_name: str:  (Default value = typer.Option(...)
+    :param "-tn": 
+    :param "--taskame"): 
+    :param summary: str:  (Default value = typer.Option(None)
+    :param "-d": 
+    :param "--description"): 
+    :param owner: str:  (Default value = typer.Option(...)
+    :param "-o": 
+    :param "--owner"): 
+
+    """
 
     if not check_list_exists(list_name):
         print("The list does not exist. Use create list first.")
@@ -79,7 +106,22 @@
     change: str = typer.Option(..., "-c", "--change"),
 ):
 
-    """Update a task in a given todo list"""
+    """Update a task in a given todo list
+
+    :param list_name: str:  (Default value = typer.Option(...)
+    :param "-ln": 
+    :param "--listname"): 
+    :param task_id: int:  (Default value = typer.Option(...)
+    :param "-i": 
+    :param "--taskid"): 
+    :param field: str:  (Default value = typer.Option(...)
+    :param "-f": 
+    :param "--field"): 
+    :param change: str:  (Default value = typer.Option(...)
+    :param "-c": 
+    :param "--change"): 
+
+    """
     if not check_list_exists(list_name):
         print("The list does not exist. Use create list first.")
         return
@@ -91,41 +133,87 @@
 
 
 def update_task_in_list(list_name, task_id, field, change):
+    """
+
+    :param list_name: 
+    :param task_id: 
+    :param field: 
+    :param change: 
+
+    """
     df = load_list(list_name)
     df.loc[task_id, field] = change
     store_list(df, list_name)
 
 
 def create_list(name: str):
+    """
+
+    :param name: str: 
+
+    """
     df = pd.DataFrame(columns=["created", "task", "summary", "status", "owner"])
     store_list(df, name)
 
 
 def get_existing_lists() -> list:
+    """ """
     return os.listdir(PATH_TO_DATA)
 
 
 def check_list_exists(name: str):
+    """
+
+    :param name: str: 
+
+    """
     return get_list_filename(name) in get_existing_lists()
 
 
 def get_list_filename(name: str):
+    """
+
+    :param name: str: 
+
+    """
     return f"{name}.csv"
 
 
 def load_list(name: str):
+    """
+
+    :param name: str: 
+
+    """
     return pd.read_csv(get_list_path(name))
 
 
 def store_list(df, name: str):
+    """
+
+    :param df: 
+    :param name: str: 
+
+    """
     df.to_csv(get_list_path(name), index=False)
 
 
 def get_list_path(name: str):
+    """
+
+    :param name: str: 
+
+    """
     return f"{PATH_TO_DATA}{get_list_filename(name)}"
 
 
 def add_to_list(list_name, new_row):
+    """
+
+    :param list_name: 
+    :param new_row: 
+
+    """
     df = load_list(list_name)
     df.loc[len(df.index)] = new_row
     store_list(df, list_name)
