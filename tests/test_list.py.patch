# Patch generated by Pyment v0.3.3

--- a/test_list.py
+++ b/test_list.py
@@ -13,6 +13,11 @@
 
 @pytest.fixture(scope="function")
 def tmp_dir(tmpdir_factory):
+    """
+
+    :param tmpdir_factory: 
+
+    """
     my_tmpdir = tmpdir_factory.mktemp("pytestdata")
     todos.PATH_TO_DATA = my_tmpdir
     yield my_tmpdir
@@ -21,11 +26,17 @@
 
 @pytest.fixture(scope="session")
 def df_empty():
+    """ """
     return pd.DataFrame(columns=["created", "task", "summary", "status", "owner"])
 
 
 @pytest.fixture(scope="session")
 def df_full(new_row):
+    """
+
+    :param new_row: 
+
+    """
     return pd.DataFrame(
         [new_row], columns=["created", "task", "summary", "status", "owner"]
     )
@@ -33,18 +44,31 @@
 
 @pytest.fixture(scope="function")
 def df_full_stored(tmp_dir, df_full):
+    """
+
+    :param tmp_dir: 
+    :param df_full: 
+
+    """
     df_full.to_csv(f"{tmp_dir}/todos.csv")
     return df_full
 
 
 @pytest.fixture(scope="function")
 def df_empty_stored(tmp_dir, df_empty):
+    """
+
+    :param tmp_dir: 
+    :param df_empty: 
+
+    """
     df_empty.to_csv(f"{tmp_dir}/todos.csv")
     return df_empty
 
 
 @pytest.fixture(scope="session")
 def new_row():
+    """ """
     return {
         "created": datetime.now().strftime("%Y-%m-%d %H-%M-%S"),
         "task": "cocinar",
@@ -55,45 +79,87 @@
 
 
 def test_get_list_path():
+    """ """
     assert todos.get_list_path("todos") == todos.PATH_TO_DATA + "todos.csv"
 
 
 def test_get_filename():
+    """ """
     assert todos.get_list_filename("data") == "data.csv"
 
 
 def test_create_list(tmp_dir, df_empty):
+    """
+
+    :param tmp_dir: 
+    :param df_empty: 
+
+    """
     todos.create_list("todos")
     df1 = todos.load_list("todos")
     pd.testing.assert_frame_equal(df1, df_empty)
 
 
 def test_store_list(tmp_dir, df_empty):
+    """
+
+    :param tmp_dir: 
+    :param df_empty: 
+
+    """
     todos.store_list(df_empty, "todos")
     df2 = todos.load_list("todos")
     pd.testing.assert_frame_equal(df_empty, df2)
 
 
 def test_check_list_exists_fail(tmp_dir):
+    """
+
+    :param tmp_dir: 
+
+    """
     assert todos.check_list_exists("todos") == False
 
 
 def test_check_list_exists(df_empty_stored):
+    """
+
+    :param df_empty_stored: 
+
+    """
     assert todos.check_list_exists("todos") == True
 
 
 def test_load_list(df_empty_stored, tmp_dir):
+    """
+
+    :param df_empty_stored: 
+    :param tmp_dir: 
+
+    """
     df = todos.load_list("todos")
     pd.testing.assert_frame_equal(df_empty_stored, df)
 
 
 def test_add_to_list(new_row, df_full, tmp_dir):
+    """
+
+    :param new_row: 
+    :param df_full: 
+    :param tmp_dir: 
+
+    """
     todos.add_to_list("todos", new_row)
     df1 = todos.load_list("todos")
     pd.testing.assert_frame_equal(df1, df_full)
 
 
 def test_update_list(df_full_stored):
+    """
+
+    :param df_full_stored: 
+
+    """
     df_full_stored.loc[0, "owner"] = "Ivan"
     todos.update_task_in_list("todos", 0, "owner", "Ivan")
     df = todos.load_list("todos")
